{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "stepper-responsive-variant",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "registryDependencies": [
    "stepper"
  ],
  "files": [
    {
      "path": "examples/stepper-responsive-variant.tsx",
      "content": "import * as React from \"react\"\n\nimport { useMediaQuery } from \"@/hooks/use-media-query\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Stepper,\n  StepperControls,\n  StepperNavigation,\n  StepperPanel,\n  StepperStep,\n  StepperTitle,\n  defineStepper,\n} from \"@/registry/default/ui/stepper\"\n\nconst stepperInstance = defineStepper(\n  {\n    id: \"step-1\",\n    title: \"Step 1\",\n  },\n  {\n    id: \"step-2\",\n    title: \"Step 2\",\n  },\n  {\n    id: \"step-3\",\n    title: \"Step 3\",\n  }\n)\n\nexport default function StepperResponsiveVariant() {\n  const isMobile = useMediaQuery(\"(max-width: 768px)\")\n  return (\n    <Stepper\n      instance={stepperInstance}\n      className=\"space-y-4\"\n      variant={isMobile ? \"vertical\" : \"horizontal\"}\n    >\n      {({ methods }) => (\n        <>\n          <StepperNavigation>\n            {methods.all.map((step) => (\n              <StepperStep\n                key={step.id}\n                of={step}\n                onClick={() => methods.goTo(step.id)}\n              >\n                <StepperTitle>{step.title}</StepperTitle>\n                {isMobile &&\n                  methods.when(step.id, (step) => (\n                    <StepperPanel className=\"h-[200px] content-center rounded border bg-slate-50 p-8\">\n                      <p className=\"text-xl font-normal\">\n                        Content for {step.id}\n                      </p>\n                    </StepperPanel>\n                  ))}\n              </StepperStep>\n            ))}\n          </StepperNavigation>\n          {!isMobile &&\n            methods.switch({\n              \"step-1\": (step) => <Content id={step.id} />,\n              \"step-2\": (step) => <Content id={step.id} />,\n              \"step-3\": (step) => <Content id={step.id} />,\n            })}\n          <StepperControls>\n            {!methods.isLast && (\n              <Button\n                variant=\"secondary\"\n                onClick={methods.prev}\n                disabled={methods.isFirst}\n              >\n                Previous\n              </Button>\n            )}\n            <Button onClick={methods.isLast ? methods.reset : methods.next}>\n              {methods.isLast ? \"Reset\" : \"Next\"}\n            </Button>\n          </StepperControls>\n        </>\n      )}\n    </Stepper>\n  )\n}\n\nconst Content = ({ id }: { id: string }) => {\n  return (\n    <StepperPanel className=\"h-[200px] content-center rounded border bg-slate-50 p-8\">\n      <p className=\"text-xl font-normal\">Content for {id}</p>\n    </StepperPanel>\n  )\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}